apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "haystack.frontend.config.fullname" . }}
  labels:
    {{- include "haystack.frontend.commonLabels" . | nindent 4 }}
data:
  nginx.conf: |
    server {
        listen 3000 default_server;
        server_name _;

        client_max_body_size 100M;
        client_body_timeout 120s;

        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 10m;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        error_page 500 501 502 503 504 = @error5xx;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }


        location = /api {
            default_type application/json;
            return 200 '{"message": "API root. Please use a specific endpoint."}';
        }

        location /api/ {
            location /api/files {
                proxy_pass http://{{ include "haystack.backend.index.fullname" . }}:{{ .Values.backend.index.service.port }}/files;
            }

            location /api/search {
                proxy_pass http://{{ include "haystack.backend.query.fullname" . }}:{{ .Values.backend.query.service.port }}/search;
            }

            location = /api/health {
                return 200 '{"status": "ok"}';
            }

            default_type application/json;
            return 200 '{"message": "API root or non-existent endpoint. Please use a specific, valid endpoint."}';
        }

        location @error5xx {
            default_type application/json;
            return 500 '{"error": "Internal Server Error", "status": 500}';
        }
    }
    